# This file sets up the environment variables of the job run
pipeline_name: node2vec_sports_syn
pipeline_version: "0_0_0" # must be in  this format
description: |
  This pipeline runs the node2vec model on TFX with tensorflow / Keras
  system_configuration: All fields are required for the pipeline to run properly
  model_configuration: Additional custom arguments exposed to the model.
  For strings, array of strings,or object (dict) fields, Jinja2 templating is supported.
system_configurations:
  GCS_BUCKET_NAME: 
    description: Google Cloud Storage bucket name to store pipeline outputs
    type: string
    value: "gs://edc-dev/kubeflowpipelines-default"
  GOOGLE_CLOUD_REGION:
    description: Region to use GCP services including BigQuery, 
      Dataflow and Cloud AI Platform.
    type: string
    value: us-east1
  GOOGLE_CLOUD_PROJECT:
    description: Google cloud project name
    type: string
    value: res-nbcupea-dev-ds-sandbox-001
  ENDPOINT:
    description: Google Cloud Endpoint
    type: string
    value: df6bc4688870067-dot-us-east1.pipelines.googleusercontent.com
  TFX_IMAGE:
    description: |
      Name of the repository on Container Registry.
    type: string
    value: "gcr.io/{{ GOOGLE_CLOUD_PROJECT }}/tfx-pipeline"
  PIPELINE_ROOT:
    description: |
      TFX produces two types of outputs, files and metadata.
      Files will be created under PIPELINE_ROOT directory.
    type: string
    value: "{{ GCS_BUCKET_NAME }}/tfx_pipeline_output/{{ pipeline_name }}_{{ pipeline_version }}"
  MODEL_SERVE_DIR:
    description: |
      The last component of the pipeline, Pusher will produce serving 
      model under model_serve_dir.
    type: string
    value: "{{ PIPELINE_ROOT }}/serving_model"
  DATAFLOW_BEAM_PIPELINE_ARGS:
    description: |
      Settings for beam pipeline. Needed for bigquery. 
    type: array
    value:
      - "--project={{ GOOGLE_CLOUD_PROJECT }}"
      - "--runner=DataflowRunner"
      - "--temp_location={{ GCS_BUCKET_NAME }}/tmp"
      - "--region={{ GOOGLE_CLOUD_REGION }}"
      - "--disk_size_gb=50"
      - "--machine_type=e2-standard-8"
  GCP_AI_PLATFORM_TRAINING_ARGS:
    description: GCP AI platform settings
    type: object
    value:
      project: "{{ GOOGLE_CLOUD_PROJECT }}"
      region:  "{{ GOOGLE_CLOUD_REGION }}"
      scaleTier: CUSTOM
      # This is a GPU-enabled VM. See
      # https://cloud.google.com/ai-platform/training/docs/using-gpus
      masterType: n1-highmem-16
      masterConfig: 
        imageUri: "{{ TFX_IMAGE }}"
        acceleratorConfig:
            count: 2 # number of accelerators
            # See GPU accelerators descriptions at
            # https://cloud.google.com/ai-platform/training/docs/reference/rest/v1/AcceleratorType
            type: NVIDIA_TESLA_T4
  KUBEFLOW_RUNNER:
    description: Kubeflow runner .py script to use
    type: string
    value: kubeflow_runner.py
  enable_cache:
    description: Whether or not to enable caching of execution results
    type: boolean
    value: True
  preprocessing_fn:
    description: Import path to the preprocessing function relative to the project directory
    type: string
    value: models.preprocessing.preprocessing_fn
  run_fn:
    description: Import path to the model run function relative to the project directory
    type: string
    value: models.keras.model.run_fn
model_configurations:
  query_script_path:
    description: Path to BigQuery script, relative to the project directory
    type: string
    value: data/graph_data.sql
  num_epochs: 
    description: Number of training epochs
    type: integer
    value: 1000
  batch_size: 
    description: Batch size of training
    type: integer
    value: 150
  eval_batch_size:
    description: Batch size of evaluation. If null, use training batch size
    type: integer
    value: null
  eval_accuracy_threshold:
    description: Evaluation accuracy threshold
    type: float
    value: 0.6
  num_neg_samples:
    description: Number of negative samples to take for subsample softmax training
    type: int
    value: 12
  walk_length:
    description: node2vec graph traversal walk length
    type: int
    value: 80
  repetitions:
    description: node2vec graph traversal repetitions
    type: int
    value: 5